name: Publish Docker Image
on: [push]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  docker_build:
    name: Build ${{ matrix.arch }} Image
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - arch: amd64
            name: amd64
        #   - arch: arm64
        #     name: arm64

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'

      - name: Install cog
        run: |
          cd $GOPATH
          mkdir -p {src,bin,pkg}
          mkdir -p src/github.com/replicate/
          cd src/github.com/replicate/

          git clone https://github.com/LonghronShen/cog.git
          cd cog/
          go get ./...

          make
          sudo make install

          cd $GOPATH
          rm -rf src
          rm -rf bin
          rm -rf pkg

      - name: Parepare
        run: |
          docker system prune -a -f

          export WORK_DIR=$(pwd)
          echo "Working in '$WORK_DIR'..."

          if [ -d "/var/lib/buildkit" ]; then
            sudo cp -r /var/lib/buildkit "$WORK_DIR/buildkit"
            sudo rm -rf /var/lib/buildkit
            sudo ln -s "$WORK_DIR/buildkit" /var/lib/buildkit
          fi

          if [ -d "/var/lib/docker" ]; then
            sudo cp -r /var/lib/docker "$WORK_DIR/docker"
            sudo rm -rf /var/lib/docker
            sudo ln -s "$WORK_DIR/docker" /var/lib/docker
          fi

          sudo systemctl restart docker

          echo "Free space:"
          df -h

      - name: Get lowercase string for the repository name
        id: lowercase-repo-name
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.event.repository.name }}

      - name: Checkout base
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: ${{ github.event.repository.name }}

      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ github.ref }}-${{ matrix.arch }}
      #     restore-keys: |
      #       ${{ github.ref }}-${{ matrix.arch }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/${{ matrix.arch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get commit SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Replace tag without `v`
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/github-script@v1
        id: version
        with:
          script: |
            return context.payload.ref.replace(/\/?refs\/tags\/v/, '')
          result-encoding: string

      - name: Build and export
        id: build
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        run: |
          export DOCKER_TAG="${{ secrets.DOCKER_USERNAME }}/${{ steps.lowercase-repo-name.outputs.lowercase }}:${{ matrix.name }}-latest"
          export PLATFORM="linux/${{ matrix.arch }}"

          cd "${{ github.event.repository.name }}"
          cog build -t $DOCKER_TAG
          cog push $DOCKER_TAG

          export DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $DOCKER_TAG)
          echo "::set-output name=digest::$DIGEST"

      - name: Build and export for release
        id: build_rel
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          export DOCKER_TAG="${{ secrets.DOCKER_USERNAME }}/${{ steps.lowercase-repo-name.outputs.lowercase }}:${{ matrix.name }}-${{steps.version.outputs.result}}"
          export PLATFORM="linux/${{ matrix.arch }}"

          cd "${{ github.event.repository.name }}"
          cog build -t $DOCKER_TAG
          cog push $DOCKER_TAG

          export DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $DOCKER_TAG)
          echo "::set-output name=digest::$DIGEST"

      - name: Save digest
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        run: echo ${{ steps.build.outputs.digest }} > /tmp/digest.txt

      - name: Save release digest
        if: startsWith(github.ref, 'refs/tags/')
        run: echo ${{ steps.build_rel.outputs.digest }} > /tmp/digest.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: digest_${{ matrix.name }}
          path: /tmp/digest.txt

  manifests:
    name: Build manifests
    needs: [docker_build]
    runs-on: ubuntu-latest
    steps:
      - name: Get lowercase string for the repository name
        id: lowercase-repo-name
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.event.repository.name }}

      - name: Checkout base
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [worker.oci]
              max-parallelism = 1

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          path: /tmp/images/

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Replace tag without `v`
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/github-script@v1
        id: version
        with:
          script: |
            return context.payload.ref.replace(/\/?refs\/tags\/v/, '')
          result-encoding: string

      - name: Merge and push manifest on master branch
        if: github.ref == 'refs/heads/master'
        run: python scripts/merge_manifest.py "${{ secrets.DOCKER_USERNAME }}/${{ steps.lowercase-repo-name.outputs.lowercase }}"

      - name: Merge and push manifest on release
        if: startsWith(github.ref, 'refs/tags/')
        run: python scripts/merge_manifest.py "${{ secrets.DOCKER_USERNAME }}/${{ steps.lowercase-repo-name.outputs.lowercase }}" ${{steps.version.outputs.result}}
